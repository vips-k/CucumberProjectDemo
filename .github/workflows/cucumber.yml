name: Run Cucumber CLI

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  workflow_dispatch:

jobs:
  run-cucumber:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      pull-requests: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Install dependencies
      run: ./gradlew dependencies

    - name: Run Cucumber tests
      run: ./gradlew cucumberCli --parallel

    - name: List report directory contents (debugging)
      if: always()
      run: ls -R build/allure/commandline/plugins/behaviors-plugin/

    - name: Upload artifact
      if: always()
      uses: actions/upload-pages-artifact@v3
      with:
        name: github-pages
        path: build/reports/allure-report/allureReport/

    # Step 6: Install Node.js dependencies (Fix for xml2js)
    - name: Install Node.js dependencies
      if: always()
      run: npm install xml2js

    # Step 6: Parse JUnit XML and Add PR Comment
    - name: Parse JUnit XML and Comment on PR
      if: always() # Ensure this runs even if tests fail
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const xml2js = require('xml2js');
          const parser = new xml2js.Parser();
          
          try {
            const xmlData = fs.readFileSync('./build/test-results/test.xml', 'utf-8');
            console.log('XML Data:', xmlData); // Debugging: Log XML content
          
            parser.parseStringPromise(xmlData).then(result => {
              console.log('Parsed Result:', result); // Debugging: Log parsed result
          
              // Check if the root is 'testsuite' instead of 'testsuites'
              const testsuite = result.testsuite || (result.testsuites && result.testsuites.testsuite[0]);
          
              if (!testsuite) {
                throw new Error('Invalid XML structure: Missing "testsuite"');
              }
          
              const totalTests = testsuite.$.tests;
              const failures = testsuite.$.failures;
              const time = testsuite.$.time;
          
              const prNumber = context.payload.pull_request.number;
              const commentBody = `
          ---
          
          ## 🎯 **Test Results Summary**
          
          | 🧪 **Metric**         | 🚀 **Value**          |
          |-----------------------|-----------------------|
          | **Total Tests**       | **${totalTests}**     |
          | **Failures**          | **${failures}** ⚠️   |
          | **Execution Time**    | **${time} seconds**   |
          
          ---
          
          ### 📊 **Detailed Insights**
          - **Total Tests**: ${totalTests}  
          - **Failures**: ${failures} ⚠️  
          - **Execution Time**: ${time} seconds  
          
          ✅ **All tests passed successfully!** 🎉  
          ⚠️ **Some tests failed! Please review the logs.**
          
          ---
          
          ### 🔗 **GitHub Action Details**
          This test was executed as part of the [GitHub Action workflow](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) 🚀.  
          - **Workflow Name**: ${context.workflow}  
          - **Job Name**: ${context.job}  
          - **Triggered By**: ${context.event} 
          
          ---
          
          ### 📘 **What to Do Next?**
          1. Review the **CI/CD logs** for detailed test results.  
          2. Fix any failing tests if applicable.  
          3. Re-run the workflow if necessary.
          
          ---
          
          💡 _**Note:** This comment was auto-generated by the CI/CD workflow to keep you updated on test results._
          
          `;
          
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
            }).catch(err => {
              console.error('Failed to parse JUnit XML:', err);
            });
          } catch (err) {
            console.error('Error reading or parsing JUnit XML:', err);
          }

  deploy:
    runs-on: ubuntu-latest
    if: always()
    needs: run-cucumber

    permissions:
      id-token: write
      contents: read

    steps:
    - name: Deploy to GitHub Pages
      if: always()
      uses: actions/deploy-pages@v4
      with:
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
